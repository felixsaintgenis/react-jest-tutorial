// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Gift render properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Gift
    gift={
        Object {
            "id": 1,
          }
    }
    removeGift={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form>
          <FormGroup
                    bsClass="form-group"
          >
                    <ControlLabel
                              bsClass="control-label"
                              srOnly={false}
                    >
                              Person
                    </ControlLabel>
                    <FormControl
                              bsClass="form-control"
                              className="input-person"
                              componentClass="input"
                              onChange={[Function]}
                    />
                    <ControlLabel
                              bsClass="control-label"
                              srOnly={false}
                    >
                              Present
                    </ControlLabel>
                    <FormControl
                              bsClass="form-control"
                              className="input-present"
                              componentClass="input"
                              onChange={[Function]}
                    />
          </FormGroup>
</form>,
        <button
          className="btn-remove"
          onClick={[Function]}
>
          Remove gift
</button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <FormGroup
            bsClass="form-group"
>
            <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
            >
                        Person
            </ControlLabel>
            <FormControl
                        bsClass="form-control"
                        className="input-person"
                        componentClass="input"
                        onChange={[Function]}
            />
            <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
            >
                        Present
            </ControlLabel>
            <FormControl
                        bsClass="form-control"
                        className="input-present"
                        componentClass="input"
                        onChange={[Function]}
            />
</FormGroup>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form-group",
            "children": Array [
              <ControlLabel
                bsClass="control-label"
                srOnly={false}
>
                Person
</ControlLabel>,
              <FormControl
                bsClass="form-control"
                className="input-person"
                componentClass="input"
                onChange={[Function]}
/>,
              <ControlLabel
                bsClass="control-label"
                srOnly={false}
>
                Present
</ControlLabel>,
              <FormControl
                bsClass="form-control"
                className="input-present"
                componentClass="input"
                onChange={[Function]}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "control-label",
                "children": "Person",
                "srOnly": false,
              },
              "ref": null,
              "rendered": "Person",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "form-control",
                "className": "input-person",
                "componentClass": "input",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "control-label",
                "children": "Present",
                "srOnly": false,
              },
              "ref": null,
              "rendered": "Present",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "form-control",
                "className": "input-present",
                "componentClass": "input",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Remove gift",
          "className": "btn-remove",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Remove gift",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form>
            <FormGroup
                        bsClass="form-group"
            >
                        <ControlLabel
                                    bsClass="control-label"
                                    srOnly={false}
                        >
                                    Person
                        </ControlLabel>
                        <FormControl
                                    bsClass="form-control"
                                    className="input-person"
                                    componentClass="input"
                                    onChange={[Function]}
                        />
                        <ControlLabel
                                    bsClass="control-label"
                                    srOnly={false}
                        >
                                    Present
                        </ControlLabel>
                        <FormControl
                                    bsClass="form-control"
                                    className="input-present"
                                    componentClass="input"
                                    onChange={[Function]}
                        />
            </FormGroup>
</form>,
          <button
            className="btn-remove"
            onClick={[Function]}
>
            Remove gift
</button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FormGroup
              bsClass="form-group"
>
              <ControlLabel
                            bsClass="control-label"
                            srOnly={false}
              >
                            Person
              </ControlLabel>
              <FormControl
                            bsClass="form-control"
                            className="input-person"
                            componentClass="input"
                            onChange={[Function]}
              />
              <ControlLabel
                            bsClass="control-label"
                            srOnly={false}
              >
                            Present
              </ControlLabel>
              <FormControl
                            bsClass="form-control"
                            className="input-present"
                            componentClass="input"
                            onChange={[Function]}
              />
</FormGroup>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "form-group",
              "children": Array [
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
>
                  Person
</ControlLabel>,
                <FormControl
                  bsClass="form-control"
                  className="input-person"
                  componentClass="input"
                  onChange={[Function]}
/>,
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
>
                  Present
</ControlLabel>,
                <FormControl
                  bsClass="form-control"
                  className="input-present"
                  componentClass="input"
                  onChange={[Function]}
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "control-label",
                  "children": "Person",
                  "srOnly": false,
                },
                "ref": null,
                "rendered": "Person",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-control",
                  "className": "input-person",
                  "componentClass": "input",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "control-label",
                  "children": "Present",
                  "srOnly": false,
                },
                "ref": null,
                "rendered": "Present",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-control",
                  "className": "input-present",
                  "componentClass": "input",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Remove gift",
            "className": "btn-remove",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Remove gift",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
